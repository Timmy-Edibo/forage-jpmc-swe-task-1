From 08cc7d4efc1ffa60421f57e1b54c4bd6e30a6121 Mon Sep 17 00:00:00 2001
From: Timmy-Edibo <timothyedibo@gmail.com>
Date: Wed, 19 Apr 2023 09:18:03 +0100
Subject: [PATCH] added test assertions

---
 client3.py     | 12 +++++++++---
 client_test.py | 22 ++++++++++++++++++++++
 2 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..9740a7b 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,17 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) /2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    
+    if price_b ==0:
+        return 
+    return price_a/ price_b
 
 
 # Main
@@ -52,8 +55,11 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices ={}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+        
+            prices[stock]= price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..5a01549 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,13 +8,35 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    
+    expected = [
+      ('ABC', 120.48, 121.2, 120.84),
+      ('DEF', 117.87, 121.68, 119.775)
+    ]
+    
+    for i in range(len(quotes)):
+      assert getDataPoint(quotes[i])[-1] ==expected[i][-1]
 
+      
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    
+    expected = [
+      ('ABC', 120.48, 119.2, 119.84),
+      ('DEF', 117.87, 121.68, 119.775)
+    ]
+    
+    
+    for i in range(len(quotes)):
+      res = getDataPoint(quotes[i])
+      exp = expected[i]
+      assert ( res[1] > res[2] ) == (exp[1] > exp[2] )
+
+
 
 
   """ ------------ Add more unit tests ------------ """
-- 
2.25.1

